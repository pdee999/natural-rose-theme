//////////////////////////////////////////
//CONTENT
//////////////////////////////////////////

//Multiline Ellipses
@mixin multiline-ellipsis($font-size: 1, $lineHeight: 1.25, $lineCount: 1, $context: 16px, $bgColor: white){
  overflow: hidden;
  //position: relative;
  display: block;
  display: -webkit-box;
  line-height: $lineHeight;
  max-height: $font-size * $lineHeight * $lineCount * $context;
  max-width: 100%;
  //text-align: justify;
  //margin-right: -1em;
  // padding-right: 1em;
  //padding-right: $gutter-width*1.2;
  font-size: $font-size + em;
  -webkit-line-clamp: $lineCount;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  //&:before {
  //  //content: '\02026';
  //  content: '...';
  //  position: absolute;
  //  //right: 0;
  //  right: $gutter-width/2;
  //  bottom: $slug-height/20;
  //}
  //&:after {
  //  content: '';
  //  position: absolute;
  //  //right: 0;
  //  right: $gutter-width/2;
  //  width: 1em;
  //  height: 1em;
  //  margin-top: 0.2em;
  //  background: $bgColor;
  //}
}

//Gradient
//@mixin vertical-gradient($start-color, $start-opacity, $end-color, $end-opacity, $start-position: 0%, $end-position: 100%) {
//  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#000000+0,000000+100&1+0,0+100 */
//  background: -moz-linear-gradient(top,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position); /* FF3.6-15 */
//  background: -webkit-linear-gradient(top,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position); /* Chrome10-25,Safari5.1-6 */
//  background: -ms-linear-gradient(top,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
//  background: linear-gradient(to bottom,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
//  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=0 ); /* IE6-9 */
//}

@mixin gradient($start-color, $start-opacity, $end-color, $end-opacity, $orentation: vertical, $start-position: 0%, $end-position: 100%) {
  @if $orentation == vertical {
    background: -moz-linear-gradient(top,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position);
    background: -webkit-linear-gradient(top,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: -ms-linear-gradient(top,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: linear-gradient(to bottom,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=0 );
  } @else if $orentation == horizontal {
    background: -moz-linear-gradient(left,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position);
    background: -webkit-linear-gradient(left,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: -ms-linear-gradient(left,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: linear-gradient(to right,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=1 );
  } @else if $orentation == diagonalup {
    background: -moz-linear-gradient(45deg,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position);
    background: -webkit-linear-gradient(45deg,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: -ms-linear-gradient(45deg,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: linear-gradient(45deg,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=1 );
  } @else if $orentation == diagonaldown {
    background: -moz-linear-gradient(-45deg,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position);
    background: -webkit-linear-gradient(-45deg,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: -ms-linear-gradient(-45deg,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: linear-gradient(135deg,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=1 );
  } @else if $orentation == radial {
    background: -moz-radial-gradient(center, ellipse cover,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position);
    background: -webkit-radial-gradient(center, ellipse cover,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: -ms-linear-gradient(center, ellipse cover,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: radial-gradient(ellipse at center,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=1 );
  } @else {
    background: -moz-linear-gradient($orentation,  rgba($start-color, $start-opacity) $start-position, rgba($end-color, $end-opacity) $end-position);
    background: -webkit-linear-gradient($orentation,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: -ms-linear-gradient($orentation,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    background: linear-gradient($orentation,  rgba($start-color, $start-opacity) $start-position,rgba($end-color, $end-opacity) $end-position);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=1 );
  }
}

//Transparent Backgrounds
@mixin transparent($color, $alpha) {
    $rgba: rgba($color, $alpha);
    $ie-hex-str: ie-hex-str($rgba);
    background-color: transparent;
    background-color: $rgba;
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
    zoom: 1;
}


//Prevents elements from being selecteable (form elements, links, etc.)
//@include user-select(none);
@mixin user-select($select) {
  -webkit-touch-callout: $select;
  -webkit-user-select: $select;
  -khtml-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select;
  user-select: $select;
}


//Overlays
@mixin overlay {
  position: relative;
  &:before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 0;
  }
}

@mixin transparent-color-overlay($color, $opacity) {
  @include overlay;
  .content:first-child {
    position: relative;
    z-index: 1;
  }
  &:before {
    @include transparent($color, $opacity);
  }
}

@mixin transparent-image-overlay($url, $opacity) {
  @include overlay;
  .content:first-child {
    position: relative;
    z-index: 1;
  }
  &:before {
    background-image: url($url);
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: scroll;
    background-position: center top;
    opacity: $opacity;
  }
}

@mixin gradient-overlay($start-color, $start-opacity, $end-color, $end-opacity, $orentation: vertical, $start-position: 0%, $end-position: 100%) {
  @include overlay;
  .content:first-child {
    position: relative;
    z-index: 1;
  }
  &:before {
    @include gradient($start-color, $start-opacity, $end-color, $end-opacity, $orentation, $start-position, $end-position);
  }
}




//////////////////////////////////////////
//TYPE
//////////////////////////////////////////

//Smallcaps
@mixin smallcaps() {
  // Some font-families don’t support small caps or don’t provide them with
  // their web font.
  font-variant: small-caps;
  text-transform: lowercase;
}


//Headings
/*USAGE
@include headings() {
    color: #000;
}
*/
@mixin headings($from: 1, $to: 6){
  @for $i from $from through $to{
    h#{$i}{
      @content
    }
  }
}




//////////////////////////////////////////
//LISTS
//////////////////////////////////////////

//Remove Bullets
@mixin no-bullets {
  list-style-type: none;
  list-style-image: none;
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
  ul{
    list-style-image: none;
    list-style-type: none;
    margin-left: 0;
    margin-right: 0;
    padding-left: 0;
    padding-right: 0;
  }
  li{
    list-style-type: none;
    //margin-left: 0;
    //margin-right: 0;
    //padding-left: 0;
    //padding-right: 0;
    &.leaf{
      list-style-image: none;
      list-style-type: none;
    }
  }
}

//Remove List
@mixin no-list {
  @include no-bullets;
  li{
    display: inline-block;
  }
}

//Float List Items Left
@mixin float-list {
  @include no-bullets;
  li{
    float: left;
  }
}

//Restore List - No Bullets
@mixin  restore-list {
  @include no-bullets;
  li{
    display: list-item;
    float: none;
  }
}

//Make Bulleted List
@mixin make-list {
  ul{
    margin: 0 0 0 1.5em;
  }
  li{
    list-style: disc outside none;
    padding-left: 0;
  }
}




//////////////////////////////////////////
//FORMS
//////////////////////////////////////////

//Form Placeholders
@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
  //&::-webkit-input-placeholder {@content}
  //&:-moz-placeholder           {@content}
  //&::-moz-placeholder          {@content}
  //&:-ms-input-placeholder      {@content}
}




//////////////////////////////////////////
//MEDIA
//////////////////////////////////////////

// Inline SVG background image with a PNG fallback.
// Fallback based on: http://pauginer.tumblr.com/post/36614680636/invisible-gradient-technique
@mixin svg-background($image-name) {
  background-image: image-url("bg/" + $image-name + ".png", false, false);
  background-image: -webkit-linear-gradient(transparent, transparent), inline-image("bg/" + $image-name + ".svg");
  background-image: linear-gradient(transparent, transparent), inline-image("bg/" + $image-name + ".svg");
}

@mixin svgz-background($image-name) {
  background-image: image-url("bg/" + $image-name + ".png", false, false);
  background-image: -webkit-linear-gradient(transparent, transparent), image-url("bg/" + $image-name + ".svgz");
  background-image: linear-gradient(transparent, transparent), image-url("bg/" + $image-name + ".svgz");
}


//Responsive Video
@mixin responsive-video($aspect) {
  position: relative;
  height: 0;
  iframe{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
  }
  @if $aspect == 'wide'{
    padding-bottom: 56.25%; /* 16:9 */
  } @else {
    padding-bottom: 75%; /* 4:3 */
  }
}


//Maintain Aspect Ratio
/*USAGE
--HTML--
<div class="some-element">
    <div class="content"></div>
</div>
--SASS--
.some-element { @include aspect-ratio(16, 9); }
*/
@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}


//Remove Aspect Ratio
@mixin remove-aspect-ratio {
  position: relative;
  &:before {
    content: none;
  }
  > .content {
    position: relative;
    top: auto;
    left: auto;
    right: auto;
    bottom:auto;
  }
}



